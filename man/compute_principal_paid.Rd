% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_annuity.R
\name{compute_principal_paid}
\alias{compute_principal_paid}
\title{Compute Principal Paid To Date}
\usage{
compute_principal_paid(
  principal,
  monthly_payment,
  rate_per_month,
  n_payments_remaining
)
}
\arguments{
\item{principal}{Numeric. The original loan principal amount.
Must be non-negative.}

\item{monthly_payment}{Numeric. The fixed monthly payment amount.
Must be non-negative.}

\item{rate_per_month}{Numeric. The interest rate per month.
Must be non-negative.}

\item{n_payments_remaining}{Integer. The number of payments still remaining
on the loan. Must be non-negative.}
}
\value{
Numeric. The total principal paid to date.
}
\description{
Calculates the total amount of principal paid on a loan up to the current point.
This is the difference between the original principal and the remaining principal.
}
\examples{
# Calculate principal paid on a $300k, 30yr, 6\% APR loan after 5 years (60 payments made)
annual_rate <- 0.06
monthly_rate <- annual_rate / 12
original_principal <- 300000
total_payments <- 360
payment <- compute_monthly_payment(original_principal, monthly_rate, total_payments) # approx 1798.65
payments_made <- 60
remaining_payments <- total_payments - payments_made

compute_principal_paid(
  principal = original_principal,
  monthly_payment = payment,
  rate_per_month = monthly_rate,
  n_payments_remaining = remaining_payments
)
# Expected output: approx 21280.97 (which is 300000 - 278719.03)

# Principal paid on a 0\% loan after 6 of 12 payments
compute_principal_paid(
  principal = 12000,
  monthly_payment = 1000,
  rate_per_month = 0,
  n_payments_remaining = 6
)
# Expected output: 6000
}
